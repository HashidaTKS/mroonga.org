---
layout: post.en
title: Mroonga 2.07 has been released!
description: Mroonga 2.0.7 has been released!
published: false
---
h2. Mroonga 2.07 has been released!

"Mroonga 2.07":/docs/news.html#release-2-07 has been released!

Mroonga is a MySQL storage engine that supports fast fulltext search and geolocation search. It is CJK ready. It uses groonga as a storage and fulltext search engine.

How to install: "Install":/docs/install.html

This release has a backward compatibility about database.

There are two topics for this release:

* Supported experimental snippet function
* Enabled AppArmor configuration for MeCab

h3. Supported experimental snippet function

"Tritonn project":http://qwik.jp/tritonn/about_en.html which is ancestor of mroonga had provided snippet UDF which extract keyword and surrounding text.

This release began to support @mroonga_snippet@ function which provides similar functionality like snippet UDF.

Note that this feature is experimental.

Here is the syntax about @mroonga_snippet@ function:

<pre>
  SELECT mroonga_snippet(document, max_length, max_count, encoding,
    skip_leading_spaces, escape, snippet_prefix, snippet_suffix, 
    word1, word1_prefix, word1_prefix,
    word2, word2_prefix, word2_prefix, ...);
</pre>

We show how to use above experimental feature.

The theme is "Searching the document which contains 'fulltext' as a keyword, then if the document contains 'MySQL' or 'search', extract matched keyword and surrounding text".

The solution is using the @mroonga_snippet@ function and @MATCH ... AGAINST@ syntax.

Confirm following the schema definitions, the sample data and the execution example.

Here is the schema defintions:

<pre>
  CREATE TABLE `snippet_test` (
    `id` int(11) NOT NULL,
    `text` text,
    PRIMARY KEY (`id`),
    FULLTEXT KEY `text` (`text`)
  ) ENGINE=mroonga DEFAULT CHARSET=utf8
</pre>

Here is the sample data:

<pre>
  insert into snippet_test (id, text) values (1, 'An open-source fulltext search engine and column store.');
  insert into snippet_test (id, text) values (2, 'An open-source storage engine for fast fulltext search with MySQL.');
  insert into snippet_test (id, text) values (3, 'Tritonn is a patched version of MySQL that supports better fulltext search function with Senna.');
</pre>

Here is the results of execution examples:

<pre>
  mysql> select * from snippet_test;
  +----+-------------------------------------------------------------------------------------------------+
  | id | text                                                                                            |
  +----+-------------------------------------------------------------------------------------------------+
  |  1 | An open-source fulltext search engine and column store.                                         |
  |  2 | An open-source storage engine for fast fulltext search with MySQL.                              |
  |  3 | Tritonn is a patched version of MySQL that supports better fulltext search function with Senna. |
  +----+-------------------------------------------------------------------------------------------------+
  3 rows in set (0.00 sec)

  mysql> select id, mroonga_snippet(text, 8, 2, 'ascii_general_ci', 1, 1, '...', '...<br>', \
           'fulltext', '<span class="w1">', '</span>', \
           'MySQL', '<span class="w2">', '</span>', \
           'search', '<span calss="w3">', '</span>') \
           from snippet_test where match(text) against ('fulltext');

  +----+-------------------------------------------------------------------------------------+
  | id | (...ommited about query...)                                                         |
  +----+-------------------------------------------------------------------------------------+
  |  1 | ...<span class="w1">fulltext</span>...<br>... <span calss="w3">search</span> ...<br>|
  |  2 | ...<span class="w1">fulltext</span>...<br>... <span calss="w3">search</span> ...<br>|
  |  3 | ...f <span class="w2">MySQL</span> ...<br>...<span class="w1">fulltext</span>...<br>|
  +----+-------------------------------------------------------------------------------------+
  3 rows in set (0.00 sec)
</pre>

As you can see, by using with @MATCH ... AGAINST@ syntax, you can extract the parts which contains not only 'fulltext' keyword, but also 'MySQL' or 'search'.

See "How to get snippet (Keyword in context)":/docs/userguide/storage.html#how-to-get-snippet-keyword-in-context about @mroonga_snippet@ function.

h3. Enabled AppArmor configuration for MeCab

There was no configuration setting for AppArmor about the dictionary of MeCab.

If you use AppArmor introduced in Ubuntu, there is a case that mysqld can not access the dictionary of MeCab.

We have added AppArmor configuration for MeCab as it is incovenience for mroonga user.

h3. Conclusion

See "Release 2.07 - 2012/09/29":/docs/news.html#release-2-07 about detailed changes since 2.06.

Let's search by mroonga!
